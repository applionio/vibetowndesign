#%YAML 1.2
---
meta:
  title: "Notion AI Integration Guide"
  version: "1.0"
  last_updated: "2025-06-20"
  description: "A complete reference for using AI to manage your Notion workspace effectively"
quick_start:
  basic_page_operations:
    - create_page: "Create a page called [Title] in [Database/Location]"
    - update_content: "Update the [Page Name] page with [new content]"
    - search_content:
        - "Find pages about [topic]"
        - "Search for [keyword]"
    - get_page_info: "Show me the [Page Name] page"
  database_operations:
    - add_to_database: "Add a new entry to [Database Name] with [properties]"
    - create_database: "Create a new database for [purpose]"
    - move_pages: "Move [Page Name] to [Database Name]"
    - list_entries: "Show me all pages in [Database Name]"
workflows:
  creating_content_steps: |
    1️⃣ Specify the target location (database/parent page)
    2️⃣ Provide the title and content
    3️⃣ Set properties (status, category, etc.)
    4️⃣ Review and confirm the creation
  creating_content_example: "Create a tech spec called 'User Authentication' in Vibetown Docs with Draft status"
  finding_information_steps: |
    1️⃣ Use specific keywords related to your topic
    2️⃣ Mention the database/area to search in
    3️⃣ Ask for summaries if content is lengthy
  finding_information_example: "Search Vibetown Docs for pages about character memory system"
  organizing_content_steps: |
    1️⃣ Identify the content to move/organize
    2️⃣ Specify the destination database
    3️⃣ Update properties as needed
    4️⃣ Verify the new organization
  organizing_content_example: "Move the 'Combat System' page to the Tech Spec category"
pro_tips:
  be_specific:
    good: "Create a PRD for the vibe selection feature in Vibetown Docs"
    bad: "Make a document"
  use_database_names:
    good: "Add to Vibetown Docs database"
    bad: "Put it somewhere"
  include_properties:
    good: "Set status to In Review and category to Tech Spec"
    bad: "Just create the page"
  batch_operations:
    efficient: "Create 3 pages: [list] all in the same database"
    slow: "Three separate requests"
advanced_features:
  smart_search: |
    - Search across connected tools (Slack, Google Drive, etc.)
    - Use natural language like "What did we decide about the combat system?"
    - Search by date: "Show me documents updated this week"
  content_templates: |
    - Request specific formats: "Create a PRD template"
    - Use consistent structures: "Follow the same format as [existing page]"
    - Include standard sections automatically
  database_management: |
    - Create relationships between databases
    - Set up automated properties
    - Organize with tags and categories
common_tasks_commands:
  - task: "Create Meeting Notes"
    command: "Create meeting notes for [date/topic] in Vibetown Docs"
  - task: "Update Project Status"
    command: "Update the [project] page status to In Progress"
  - task: "Find Related Content"
    command: "Show me all pages related to character development"
  - task: "Create Task Lists"
    command: "Create a task list for [project] with these items: [list]"
  - task: "Generate Reports"
    command: "Create a summary of all Tech Specs in Draft status"
  - task: "Archive Content"
    command: "Move completed projects to archived section"
common_mistakes:
  location_confusion: "Always specify WHERE to create content; when unsure ask for database."
  property_mismatches: "Check database schema; use exact property names and values."
  search_limitations: "Try different keywords; be patient."
  batch_processing: "Don't request too many operations at once."
best_practices:
  content_creation:
    - "Start with purpose: What's this document for?"
    - "Use templates to create reusable structures."
    - "Add metadata: Always fill in properties."
    - "Link related content for connections."
  organization:
    - "Consistent naming: Use clear descriptive titles."
    - "Proper categorization: Use database properties."
    - "Regular cleanup: Archive outdated content."
    - "Search optimization: Use keywords strategically."
    - "Maintain a clean, simple, clutter-free workspace; group related files into folders."
  collaboration:
    - "Clear permissions: Know who can access what."
    - "Status tracking: Keep statuses updated."
    - "Comments: Use for feedback and discussions."
    - "Version control: Track changes and updates."
troubleshooting:
  if_something_doesnt_work:
    - "Check permissions: Do you have access?"
    - "Verify database: Does the target exist?"
    - "Simplify request: Break into smaller steps."
    - "Try again: Sometimes temporary."
  getting_better_results:
    - "Be more specific in your requests"
    - "Provide context about your goal"
    - "Ask for clarification when unsure"
    - "Use exact names from your workspace"
quick_reference:
  key_databases:
    - "Vibetown Docs: Main documentation hub"
    - "Vibetown Professions: Character/profession data"
    - "VibeTown Jobs: Job/role information"
  essential_properties:
    - "Status: Draft → In Review → Published → Outdated"
    - "Category: Tech Spec, PRD, Guide, Best Practices, etc."
    - "Feature Name: Link to specific features"
    - "Author: Track ownership"
...
